// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/Mux4Way16.hdl

/**
 * 4-way 16-bit multiplexor:
 * out = a if sel == 00
 *       b if sel == 01
 *       c if sel == 10
 *       d if sel == 11
 */

CHIP Mux4Way16 {
    IN a[16], b[16], c[16], d[16], sel[2];
    OUT out[16];

    PARTS:
    Mux(a=a[0], b=c[0], sel=sel[1], out=muxA0);
	Mux(a=b[0], b=d[0], sel=sel[1], out=muxB0);
	Mux(a=muxA0, b=muxB0, sel=sel[0], out=out[0]);
	
	Mux(a=a[1], b=c[1], sel=sel[1], out=muxA1);
	Mux(a=b[1], b=d[1], sel=sel[1], out=muxB1);
	Mux(a=muxA1, b=muxB1, sel=sel[0], out=out[1]);
	
	Mux(a=a[2], b=c[2], sel=sel[1], out=muxA2);
	Mux(a=b[2], b=d[2], sel=sel[1], out=muxB2);
	Mux(a=muxA2, b=muxB2, sel=sel[0], out=out[2]);
	
	Mux(a=a[3], b=c[3], sel=sel[1], out=muxA3);
	Mux(a=b[3], b=d[3], sel=sel[1], out=muxB3);
	Mux(a=muxA3, b=muxB3, sel=sel[0], out=out[3]);
	
	Mux(a=a[4], b=c[4], sel=sel[1], out=muxA4);
	Mux(a=b[4], b=d[4], sel=sel[1], out=muxB4);
	Mux(a=muxA4, b=muxB4, sel=sel[0], out=out[4]);
	
	Mux(a=a[5], b=c[5], sel=sel[1], out=muxA5);
	Mux(a=b[5], b=d[5], sel=sel[1], out=muxB5);
	Mux(a=muxA5, b=muxB5, sel=sel[0], out=out[5]);
	
	Mux(a=a[6], b=c[6], sel=sel[1], out=muxA6);
	Mux(a=b[6], b=d[6], sel=sel[1], out=muxB6);
	Mux(a=muxA6, b=muxB6, sel=sel[0], out=out[6]);
	
	Mux(a=a[7], b=c[7], sel=sel[1], out=muxA7);
	Mux(a=b[7], b=d[7], sel=sel[1], out=muxB7);
	Mux(a=muxA7, b=muxB7, sel=sel[0], out=out[7]);
	
	Mux(a=a[8], b=c[8], sel=sel[1], out=muxA8);
	Mux(a=b[8], b=d[8], sel=sel[1], out=muxB8);
	Mux(a=muxA8, b=muxB8, sel=sel[0], out=out[8]);
	
	Mux(a=a[9], b=c[9], sel=sel[1], out=muxA9);
	Mux(a=b[9], b=d[9], sel=sel[1], out=muxB9);
	Mux(a=muxA9, b=muxB9, sel=sel[0], out=out[9]);
	
	Mux(a=a[10], b=c[10], sel=sel[1], out=muxA10);
	Mux(a=b[10], b=d[10], sel=sel[1], out=muxB10);
	Mux(a=muxA10, b=muxB10, sel=sel[0], out=out[10]);
	
	Mux(a=a[11], b=c[11], sel=sel[1], out=muxA11);
	Mux(a=b[11], b=d[11], sel=sel[1], out=muxB11);
	Mux(a=muxA11, b=muxB11, sel=sel[0], out=out[11]);
	
	Mux(a=a[12], b=c[12], sel=sel[1], out=muxA12);
	Mux(a=b[12], b=d[12], sel=sel[1], out=muxB12);
	Mux(a=muxA12, b=muxB12, sel=sel[0], out=out[12]);
	
	Mux(a=a[13], b=c[13], sel=sel[1], out=muxA13);
	Mux(a=b[13], b=d[13], sel=sel[1], out=muxB13);
	Mux(a=muxA13, b=muxB13, sel=sel[0], out=out[13]);
	
	Mux(a=a[14], b=c[14], sel=sel[1], out=muxA14);
	Mux(a=b[14], b=d[14], sel=sel[1], out=muxB14);
	Mux(a=muxA14, b=muxB14, sel=sel[0], out=out[14]);
	
	Mux(a=a[15], b=c[15], sel=sel[1], out=muxA15);
	Mux(a=b[15], b=d[15], sel=sel[1], out=muxB15);
	Mux(a=muxA15, b=muxB15, sel=sel[0], out=out[15]);
}
